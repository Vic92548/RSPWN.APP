@use 'sass:map';
@use 'sass:meta';
@use 'variables' as *;

@mixin glass-effect($bg: primary, $blur-key: md, $border: base) {
  @if meta.type-of($bg) == 'string' {
    background: map.get($glass-bg, $bg);
  } @else {
    background: $bg;
  }

  @if meta.type-of($blur-key) == 'string' {
    backdrop-filter: map.get($blur, $blur-key);
    -webkit-backdrop-filter: map.get($blur, $blur-key);
  } @else {
    backdrop-filter: $blur-key;
    -webkit-backdrop-filter: $blur-key;
  }

  @if meta.type-of($border) == 'string' {
    border: 1px solid map.get($glass-border, $border);
  } @else {
    border: 1px solid $border;
  }

  box-shadow: map.get($shadows, md);
  transition: map.get($transitions, base);
}

@mixin hover-lift($y: -2px, $shadow: hover) {
  &:hover {
    transform: translateY($y);
    @if meta.type-of($shadow) == 'string' {
      box-shadow: map.get($shadows, $shadow);
    } @else {
      box-shadow: $shadow;
    }
  }
}

@mixin responsive($breakpoint) {
  @media (max-width: map.get($breakpoints, #{$breakpoint})) {
    @content;
  }
}

@mixin responsive-min($breakpoint) {
  @media (min-width: map.get($breakpoints, #{$breakpoint})) {
    @content;
  }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

@mixin button-variant($bg, $hover-bg, $color: white) {
  background: $bg;
  color: $color;
  &:hover {
    background: $hover-bg;
  }
}

@mixin scrollbar-style {
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.3) transparent;

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: map.get($glass-bg, tertiary);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 4px;

    &:hover {
      background: rgba(255, 255, 255, 0.4);
    }
  }
}

@mixin shimmer-effect {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
                    135deg,
                    transparent 40%,
                    rgba(255, 255, 255, 0.1) 50%,
                    transparent 60%
    );
    transform: translateX(-100%);
    transition: transform 0.6s;
    pointer-events: none;
  }

  &:hover::before {
    transform: translateX(100%);
  }
}

@mixin card-base {
  @include glass-effect();
  border-radius: map.get($radius, lg);
  color: #fff;
  overflow: hidden;
  position: relative;
}

@mixin icon-button($size: 44px) {
  width: $size;
  height: $size;
  @include flex-center;
  cursor: pointer;
  transition: map.get($transitions, fast);
}

@mixin generate-spacing($property, $prefix) {
  @each $name, $value in $spacing {
    .#{$prefix}-#{$name} {
      #{$property}: $value;
    }
  }
}

@mixin generate-radius-classes {
  @each $name, $value in $radius {
    .radius-#{$name} {
      border-radius: $value;
    }
  }
}

@mixin animation-slideIn($duration: 0.5s, $delay: 0s) {
  animation: slideIn $duration ease forwards;
  opacity: 0;
  animation-delay: $delay;
}

@mixin stat-card-icon($color) {
  font-size: 32px;
  margin-bottom: 12px;
  transition: all 0.3s ease;
  color: $color;
}

@mixin badge-style($bg, $border, $color) {
  background: $bg;
  border: 1px solid $border;
  color: $color;
  padding: 6px 12px;
  border-radius: map.get($radius, xl);
  font-size: 11px;
  font-weight: 700;
}

@mixin responsive-grid($min-width, $gap: 20px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

@mixin container-width($width: 90%, $max-width: 480px) {
  width: $width !important;
  max-width: $max-width !important;
  margin: 20px auto !important;

  @include responsive(tablet) {
    width: calc(100% - 20px) !important;
    margin: 10px !important;
  }
}